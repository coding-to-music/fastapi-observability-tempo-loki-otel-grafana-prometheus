x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: "3.4"

services:
  loki:
    image: grafana/loki:2.6.1
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  # app-a:
  #   build: ./fastapi_app/
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - loki
  #   environment:
  #     APP_NAME: "app-a"
  #   logging: *default-logging

  # app-b:
  #   build: ./fastapi_app/
  #   ports:
  #     - "8003:8000"
  #   depends_on:
  #     - loki
  #   environment:
  #     APP_NAME: "app-b"
  #   logging: *default-logging

  # app-c:
  #   build: ./fastapi_app/
  #   ports:
  #     - "8002:8000"
  #   depends_on:
  #     - loki
  #   environment:
  #     APP_NAME: "app-c"
  #   logging: *default-logging

  prometheus:
    image: prom/prometheus:v2.39.1
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging

  # tempo:
  #   image: grafana/tempo:1.5.0
  #   command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false", "--search.enabled=true" ]
  #   ports:
  #     - "14250:14250"
  #   depends_on:
  #     - loki
  #   logging: *default-logging

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    logging: *default-logging

  provider1-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB="provider1"
      # - POSTGRES_USER="postgres"
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "postgres",
          "-d",
          "provider1"
        ]
      interval: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - ./boot-otel-tempo-provider1/db/data:/var/lib/postgresql
      - ./boot-otel-tempo-provider1/db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  # pgadmin:
  #   image: dpage/pgadmin4
  #   ports:
  #     - 7070:80
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   depends_on:
  #     - provider1-db

  # redis:
  #   image: redis:latest
  #   restart: always
  #   environment:
  #     REDIS_PASSWORD: your_redis_password
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./redis-data:/data

  # redis-insight:
  #   image: redislabs/redisinsight:latest
  #   ports:
  #     - "8001:8001"
  #   restart: always
  #   environment:
  #     - REDIS_0_HOST=redis
  #     - REDIS_0_PORT=6379
  #     - REDIS_0_PASSWORD=your_redis_password
  #     - REDIS_0_TLS=false
  #     - REDIS_0_NAME=My Redis